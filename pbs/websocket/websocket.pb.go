// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: websocket.proto

package websocket

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type WsMsgType int32

const (
	WsMsgType_Online       WsMsgType = 0
	WsMsgType_OnlineACK    WsMsgType = 1
	WsMsgType_ImmediateMsg WsMsgType = 2
	WsMsgType_PullUnread   WsMsgType = 3
	WsMsgType_Offline      WsMsgType = 4
	WsMsgType_UnreadAck    WsMsgType = 5
)

// Enum value maps for WsMsgType.
var (
	WsMsgType_name = map[int32]string{
		0: "Online",
		1: "OnlineACK",
		2: "ImmediateMsg",
		3: "PullUnread",
		4: "Offline",
		5: "UnreadAck",
	}
	WsMsgType_value = map[string]int32{
		"Online":       0,
		"OnlineACK":    1,
		"ImmediateMsg": 2,
		"PullUnread":   3,
		"Offline":      4,
		"UnreadAck":    5,
	}
)

func (x WsMsgType) Enum() *WsMsgType {
	p := new(WsMsgType)
	*p = x
	return p
}

func (x WsMsgType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WsMsgType) Descriptor() protoreflect.EnumDescriptor {
	return file_websocket_proto_enumTypes[0].Descriptor()
}

func (WsMsgType) Type() protoreflect.EnumType {
	return &file_websocket_proto_enumTypes[0]
}

func (x WsMsgType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WsMsgType.Descriptor instead.
func (WsMsgType) EnumDescriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{0}
}

type WSOnline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UID      string `protobuf:"bytes,1,opt,name=UID,proto3" json:"UID,omitempty"`
	UnixTime int64  `protobuf:"varint,3,opt,name=UnixTime,proto3" json:"UnixTime,omitempty"`
	DevToken string `protobuf:"bytes,4,opt,name=devToken,proto3" json:"devToken,omitempty"`
	DevTyp   int32  `protobuf:"varint,5,opt,name=devTyp,proto3" json:"devTyp,omitempty"`
}

func (x *WSOnline) Reset() {
	*x = WSOnline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSOnline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSOnline) ProtoMessage() {}

func (x *WSOnline) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSOnline.ProtoReflect.Descriptor instead.
func (*WSOnline) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{0}
}

func (x *WSOnline) GetUID() string {
	if x != nil {
		return x.UID
	}
	return ""
}

func (x *WSOnline) GetUnixTime() int64 {
	if x != nil {
		return x.UnixTime
	}
	return 0
}

func (x *WSOnline) GetDevToken() string {
	if x != nil {
		return x.DevToken
	}
	return ""
}

func (x *WSOnline) GetDevTyp() int32 {
	if x != nil {
		return x.DevTyp
	}
	return 0
}

type WSOnlineAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool  `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Seq     int64 `protobuf:"varint,2,opt,name=Seq,proto3" json:"Seq,omitempty"`
}

func (x *WSOnlineAck) Reset() {
	*x = WSOnlineAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSOnlineAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSOnlineAck) ProtoMessage() {}

func (x *WSOnlineAck) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSOnlineAck.ProtoReflect.Descriptor instead.
func (*WSOnlineAck) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{1}
}

func (x *WSOnlineAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *WSOnlineAck) GetSeq() int64 {
	if x != nil {
		return x.Seq
	}
	return 0
}

type WSCryptoMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From     string `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`
	To       string `protobuf:"bytes,3,opt,name=To,proto3" json:"To,omitempty"`
	PayLoad  []byte `protobuf:"bytes,5,opt,name=PayLoad,proto3" json:"PayLoad,omitempty"`
	UnixTime int64  `protobuf:"varint,6,opt,name=UnixTime,proto3" json:"UnixTime,omitempty"`
}

func (x *WSCryptoMsg) Reset() {
	*x = WSCryptoMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSCryptoMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSCryptoMsg) ProtoMessage() {}

func (x *WSCryptoMsg) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSCryptoMsg.ProtoReflect.Descriptor instead.
func (*WSCryptoMsg) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{2}
}

func (x *WSCryptoMsg) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *WSCryptoMsg) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *WSCryptoMsg) GetPayLoad() []byte {
	if x != nil {
		return x.PayLoad
	}
	return nil
}

func (x *WSCryptoMsg) GetUnixTime() int64 {
	if x != nil {
		return x.UnixTime
	}
	return 0
}

type GroupEncryptKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId   string `protobuf:"bytes,1,opt,name=MemberId,proto3" json:"MemberId,omitempty"`
	EncryptKey []byte `protobuf:"bytes,2,opt,name=EncryptKey,proto3" json:"EncryptKey,omitempty"`
}

func (x *GroupEncryptKey) Reset() {
	*x = GroupEncryptKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupEncryptKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupEncryptKey) ProtoMessage() {}

func (x *GroupEncryptKey) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupEncryptKey.ProtoReflect.Descriptor instead.
func (*GroupEncryptKey) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{3}
}

func (x *GroupEncryptKey) GetMemberId() string {
	if x != nil {
		return x.MemberId
	}
	return ""
}

func (x *GroupEncryptKey) GetEncryptKey() []byte {
	if x != nil {
		return x.EncryptKey
	}
	return nil
}

type WSCryptoGroupMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From     string             `protobuf:"bytes,1,opt,name=From,proto3" json:"From,omitempty"`
	To       []*GroupEncryptKey `protobuf:"bytes,2,rep,name=To,proto3" json:"To,omitempty"`
	PayLoad  []byte             `protobuf:"bytes,3,opt,name=PayLoad,proto3" json:"PayLoad,omitempty"`
	UnixTime int64              `protobuf:"varint,4,opt,name=UnixTime,proto3" json:"UnixTime,omitempty"`
}

func (x *WSCryptoGroupMsg) Reset() {
	*x = WSCryptoGroupMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSCryptoGroupMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSCryptoGroupMsg) ProtoMessage() {}

func (x *WSCryptoGroupMsg) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSCryptoGroupMsg.ProtoReflect.Descriptor instead.
func (*WSCryptoGroupMsg) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{4}
}

func (x *WSCryptoGroupMsg) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *WSCryptoGroupMsg) GetTo() []*GroupEncryptKey {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *WSCryptoGroupMsg) GetPayLoad() []byte {
	if x != nil {
		return x.PayLoad
	}
	return nil
}

func (x *WSCryptoGroupMsg) GetUnixTime() int64 {
	if x != nil {
		return x.UnixTime
	}
	return 0
}

type WSPullUnread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Receiver     string `protobuf:"bytes,1,opt,name=Receiver,proto3" json:"Receiver,omitempty"`
	FromUnixTime int64  `protobuf:"varint,2,opt,name=FromUnixTime,proto3" json:"FromUnixTime,omitempty"`
}

func (x *WSPullUnread) Reset() {
	*x = WSPullUnread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSPullUnread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSPullUnread) ProtoMessage() {}

func (x *WSPullUnread) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSPullUnread.ProtoReflect.Descriptor instead.
func (*WSPullUnread) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{5}
}

func (x *WSPullUnread) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *WSPullUnread) GetFromUnixTime() int64 {
	if x != nil {
		return x.FromUnixTime
	}
	return 0
}

type WsUnreadAckMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to CryptoMsg:
	//	*WsUnreadAckMsg_Payload
	//	*WsUnreadAckMsg_GPayload
	CryptoMsg isWsUnreadAckMsg_CryptoMsg `protobuf_oneof:"CryptoMsg"`
}

func (x *WsUnreadAckMsg) Reset() {
	*x = WsUnreadAckMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WsUnreadAckMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WsUnreadAckMsg) ProtoMessage() {}

func (x *WsUnreadAckMsg) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WsUnreadAckMsg.ProtoReflect.Descriptor instead.
func (*WsUnreadAckMsg) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{6}
}

func (m *WsUnreadAckMsg) GetCryptoMsg() isWsUnreadAckMsg_CryptoMsg {
	if m != nil {
		return m.CryptoMsg
	}
	return nil
}

func (x *WsUnreadAckMsg) GetPayload() *WSCryptoMsg {
	if x, ok := x.GetCryptoMsg().(*WsUnreadAckMsg_Payload); ok {
		return x.Payload
	}
	return nil
}

func (x *WsUnreadAckMsg) GetGPayload() *WSCryptoGroupMsg {
	if x, ok := x.GetCryptoMsg().(*WsUnreadAckMsg_GPayload); ok {
		return x.GPayload
	}
	return nil
}

type isWsUnreadAckMsg_CryptoMsg interface {
	isWsUnreadAckMsg_CryptoMsg()
}

type WsUnreadAckMsg_Payload struct {
	Payload *WSCryptoMsg `protobuf:"bytes,1,opt,name=Payload,proto3,oneof"`
}

type WsUnreadAckMsg_GPayload struct {
	GPayload *WSCryptoGroupMsg `protobuf:"bytes,2,opt,name=GPayload,proto3,oneof"`
}

func (*WsUnreadAckMsg_Payload) isWsUnreadAckMsg_CryptoMsg() {}

func (*WsUnreadAckMsg_GPayload) isWsUnreadAckMsg_CryptoMsg() {}

type WSUnreadAck struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeID   string            `protobuf:"bytes,1,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Receiver string            `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Payload  []*WsUnreadAckMsg `protobuf:"bytes,3,rep,name=payload,proto3" json:"payload,omitempty"`
}

func (x *WSUnreadAck) Reset() {
	*x = WSUnreadAck{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WSUnreadAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WSUnreadAck) ProtoMessage() {}

func (x *WSUnreadAck) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WSUnreadAck.ProtoReflect.Descriptor instead.
func (*WSUnreadAck) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{7}
}

func (x *WSUnreadAck) GetNodeID() string {
	if x != nil {
		return x.NodeID
	}
	return ""
}

func (x *WSUnreadAck) GetReceiver() string {
	if x != nil {
		return x.Receiver
	}
	return ""
}

func (x *WSUnreadAck) GetPayload() []*WsUnreadAckMsg {
	if x != nil {
		return x.Payload
	}
	return nil
}

type WsMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash []byte    `protobuf:"bytes,1,opt,name=Hash,proto3" json:"Hash,omitempty"`
	Sig  []byte    `protobuf:"bytes,2,opt,name=Sig,proto3" json:"Sig,omitempty"`
	Typ  WsMsgType `protobuf:"varint,3,opt,name=typ,proto3,enum=WsMsgType" json:"typ,omitempty"`
	// Types that are assignable to Payload:
	//	*WsMsg_Online
	//	*WsMsg_OlAck
	//	*WsMsg_Message
	//	*WsMsg_Unread
	//	*WsMsg_UnreadAck
	//	*WsMsg_GroupMessage
	Payload isWsMsg_Payload `protobuf_oneof:"payload"`
}

func (x *WsMsg) Reset() {
	*x = WsMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_websocket_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WsMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WsMsg) ProtoMessage() {}

func (x *WsMsg) ProtoReflect() protoreflect.Message {
	mi := &file_websocket_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WsMsg.ProtoReflect.Descriptor instead.
func (*WsMsg) Descriptor() ([]byte, []int) {
	return file_websocket_proto_rawDescGZIP(), []int{8}
}

func (x *WsMsg) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *WsMsg) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *WsMsg) GetTyp() WsMsgType {
	if x != nil {
		return x.Typ
	}
	return WsMsgType_Online
}

func (m *WsMsg) GetPayload() isWsMsg_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *WsMsg) GetOnline() *WSOnline {
	if x, ok := x.GetPayload().(*WsMsg_Online); ok {
		return x.Online
	}
	return nil
}

func (x *WsMsg) GetOlAck() *WSOnlineAck {
	if x, ok := x.GetPayload().(*WsMsg_OlAck); ok {
		return x.OlAck
	}
	return nil
}

func (x *WsMsg) GetMessage() *WSCryptoMsg {
	if x, ok := x.GetPayload().(*WsMsg_Message); ok {
		return x.Message
	}
	return nil
}

func (x *WsMsg) GetUnread() *WSPullUnread {
	if x, ok := x.GetPayload().(*WsMsg_Unread); ok {
		return x.Unread
	}
	return nil
}

func (x *WsMsg) GetUnreadAck() *WSUnreadAck {
	if x, ok := x.GetPayload().(*WsMsg_UnreadAck); ok {
		return x.UnreadAck
	}
	return nil
}

func (x *WsMsg) GetGroupMessage() *WSCryptoGroupMsg {
	if x, ok := x.GetPayload().(*WsMsg_GroupMessage); ok {
		return x.GroupMessage
	}
	return nil
}

type isWsMsg_Payload interface {
	isWsMsg_Payload()
}

type WsMsg_Online struct {
	Online *WSOnline `protobuf:"bytes,4,opt,name=online,proto3,oneof"`
}

type WsMsg_OlAck struct {
	OlAck *WSOnlineAck `protobuf:"bytes,5,opt,name=olAck,proto3,oneof"`
}

type WsMsg_Message struct {
	Message *WSCryptoMsg `protobuf:"bytes,6,opt,name=message,proto3,oneof"`
}

type WsMsg_Unread struct {
	Unread *WSPullUnread `protobuf:"bytes,7,opt,name=unread,proto3,oneof"`
}

type WsMsg_UnreadAck struct {
	UnreadAck *WSUnreadAck `protobuf:"bytes,8,opt,name=unreadAck,proto3,oneof"`
}

type WsMsg_GroupMessage struct {
	GroupMessage *WSCryptoGroupMsg `protobuf:"bytes,9,opt,name=groupMessage,proto3,oneof"`
}

func (*WsMsg_Online) isWsMsg_Payload() {}

func (*WsMsg_OlAck) isWsMsg_Payload() {}

func (*WsMsg_Message) isWsMsg_Payload() {}

func (*WsMsg_Unread) isWsMsg_Payload() {}

func (*WsMsg_UnreadAck) isWsMsg_Payload() {}

func (*WsMsg_GroupMessage) isWsMsg_Payload() {}

var File_websocket_proto protoreflect.FileDescriptor

var file_websocket_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x6c, 0x0a, 0x08, 0x57, 0x53, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x65, 0x76, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x65, 0x76, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x54, 0x79,
	0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x64, 0x65, 0x76, 0x54, 0x79, 0x70, 0x22,
	0x39, 0x0a, 0x0b, 0x57, 0x53, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x6b, 0x12, 0x18,
	0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x65, 0x71, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x53, 0x65, 0x71, 0x22, 0x67, 0x0a, 0x0b, 0x57, 0x53,
	0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x54, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x50, 0x61, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x50, 0x61, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x78, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x6e, 0x69, 0x78, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x4d, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x4b,
	0x65, 0x79, 0x22, 0x7e, 0x0a, 0x10, 0x57, 0x53, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x20, 0x0a, 0x02, 0x54, 0x6f,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x52, 0x02, 0x54, 0x6f, 0x12, 0x18, 0x0a, 0x07,
	0x50, 0x61, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x50,
	0x61, 0x79, 0x4c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x0c, 0x57, 0x53, 0x50, 0x75, 0x6c, 0x6c, 0x55, 0x6e, 0x72, 0x65,
	0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x22,
	0x0a, 0x0c, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x46, 0x72, 0x6f, 0x6d, 0x55, 0x6e, 0x69, 0x78, 0x54, 0x69,
	0x6d, 0x65, 0x22, 0x78, 0x0a, 0x0e, 0x57, 0x73, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x41, 0x63,
	0x6b, 0x4d, 0x73, 0x67, 0x12, 0x28, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x57, 0x53, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x4d, 0x73, 0x67, 0x48, 0x00, 0x52, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2f,
	0x0a, 0x08, 0x47, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x57, 0x53, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x4d, 0x73, 0x67, 0x48, 0x00, 0x52, 0x08, 0x47, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42,
	0x0b, 0x0a, 0x09, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4d, 0x73, 0x67, 0x22, 0x6c, 0x0a, 0x0b,
	0x57, 0x53, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x41, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x6f, 0x64,
	0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12,
	0x29, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x57, 0x73, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x41, 0x63, 0x6b, 0x4d, 0x73,
	0x67, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xdb, 0x02, 0x0a, 0x05, 0x57,
	0x73, 0x4d, 0x73, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x53, 0x69, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x53, 0x69, 0x67, 0x12, 0x1c, 0x0a, 0x03, 0x74, 0x79,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x57, 0x73, 0x4d, 0x73, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x03, 0x74, 0x79, 0x70, 0x12, 0x23, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69,
	0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x57, 0x53, 0x4f, 0x6e, 0x6c,
	0x69, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x24, 0x0a,
	0x05, 0x6f, 0x6c, 0x41, 0x63, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x57,
	0x53, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x05, 0x6f, 0x6c,
	0x41, 0x63, 0x6b, 0x12, 0x28, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x57, 0x53, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x4d,
	0x73, 0x67, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x27, 0x0a,
	0x06, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x57, 0x53, 0x50, 0x75, 0x6c, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x48, 0x00, 0x52, 0x06,
	0x75, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x09, 0x75, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x41, 0x63, 0x6b, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x57, 0x53, 0x55, 0x6e,
	0x72, 0x65, 0x61, 0x64, 0x41, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x09, 0x75, 0x6e, 0x72, 0x65, 0x61,
	0x64, 0x41, 0x63, 0x6b, 0x12, 0x37, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x57, 0x53, 0x43,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x48, 0x00, 0x52,
	0x0c, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x09, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x2a, 0x64, 0x0a, 0x09, 0x57, 0x73, 0x4d, 0x73,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x41, 0x43, 0x4b, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x4d, 0x73, 0x67,
	0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x75, 0x6c, 0x6c, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64,
	0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x10, 0x04, 0x12,
	0x0d, 0x0a, 0x09, 0x55, 0x6e, 0x72, 0x65, 0x61, 0x64, 0x41, 0x63, 0x6b, 0x10, 0x05, 0x42, 0x37,
	0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x69, 0x6e,
	0x6a, 0x61, 0x68, 0x6f, 0x6d, 0x65, 0x2f, 0x6e, 0x69, 0x6e, 0x6a, 0x61, 0x2d, 0x67, 0x6f, 0x2f,
	0x70, 0x62, 0x73, 0x2f, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x3b, 0x77, 0x65,
	0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_websocket_proto_rawDescOnce sync.Once
	file_websocket_proto_rawDescData = file_websocket_proto_rawDesc
)

func file_websocket_proto_rawDescGZIP() []byte {
	file_websocket_proto_rawDescOnce.Do(func() {
		file_websocket_proto_rawDescData = protoimpl.X.CompressGZIP(file_websocket_proto_rawDescData)
	})
	return file_websocket_proto_rawDescData
}

var file_websocket_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_websocket_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_websocket_proto_goTypes = []interface{}{
	(WsMsgType)(0),           // 0: WsMsgType
	(*WSOnline)(nil),         // 1: WSOnline
	(*WSOnlineAck)(nil),      // 2: WSOnlineAck
	(*WSCryptoMsg)(nil),      // 3: WSCryptoMsg
	(*GroupEncryptKey)(nil),  // 4: GroupEncryptKey
	(*WSCryptoGroupMsg)(nil), // 5: WSCryptoGroupMsg
	(*WSPullUnread)(nil),     // 6: WSPullUnread
	(*WsUnreadAckMsg)(nil),   // 7: WsUnreadAckMsg
	(*WSUnreadAck)(nil),      // 8: WSUnreadAck
	(*WsMsg)(nil),            // 9: WsMsg
}
var file_websocket_proto_depIdxs = []int32{
	4,  // 0: WSCryptoGroupMsg.To:type_name -> GroupEncryptKey
	3,  // 1: WsUnreadAckMsg.Payload:type_name -> WSCryptoMsg
	5,  // 2: WsUnreadAckMsg.GPayload:type_name -> WSCryptoGroupMsg
	7,  // 3: WSUnreadAck.payload:type_name -> WsUnreadAckMsg
	0,  // 4: WsMsg.typ:type_name -> WsMsgType
	1,  // 5: WsMsg.online:type_name -> WSOnline
	2,  // 6: WsMsg.olAck:type_name -> WSOnlineAck
	3,  // 7: WsMsg.message:type_name -> WSCryptoMsg
	6,  // 8: WsMsg.unread:type_name -> WSPullUnread
	8,  // 9: WsMsg.unreadAck:type_name -> WSUnreadAck
	5,  // 10: WsMsg.groupMessage:type_name -> WSCryptoGroupMsg
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_websocket_proto_init() }
func file_websocket_proto_init() {
	if File_websocket_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_websocket_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSOnline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSOnlineAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSCryptoMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupEncryptKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSCryptoGroupMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSPullUnread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WsUnreadAckMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WSUnreadAck); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_websocket_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WsMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_websocket_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*WsUnreadAckMsg_Payload)(nil),
		(*WsUnreadAckMsg_GPayload)(nil),
	}
	file_websocket_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*WsMsg_Online)(nil),
		(*WsMsg_OlAck)(nil),
		(*WsMsg_Message)(nil),
		(*WsMsg_Unread)(nil),
		(*WsMsg_UnreadAck)(nil),
		(*WsMsg_GroupMessage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_websocket_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_websocket_proto_goTypes,
		DependencyIndexes: file_websocket_proto_depIdxs,
		EnumInfos:         file_websocket_proto_enumTypes,
		MessageInfos:      file_websocket_proto_msgTypes,
	}.Build()
	File_websocket_proto = out.File
	file_websocket_proto_rawDesc = nil
	file_websocket_proto_goTypes = nil
	file_websocket_proto_depIdxs = nil
}
